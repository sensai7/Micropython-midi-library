# Send a SYSEX sequence
from machine import Pin
import midi

MIDI_TX = Pin(8)             # Optocoupled MIDI input in general purpose pin 8 (UART1TX)
MIDI_RX = Pin(9)             # MIDI output in general purpose pin 9 (UART1RX)

my_midi = midi.Midi(1, tx=MIDI_TX, rx=MIDI_RX)
midi_sysex = [0x20, 0x19, 0x13, 0x20, 0x05, 0x29, 0x26, 0x08, 0x20, 0x22, 0x17, 0x30, 0x02, 0x21, 0x22,
              0x13, 0x12, 0x25, 0x28, 0x26, 0x14, 0x29, 0x25, 0x10, 0x06, 0x28, 0x02, 0x23, 0x19, 0x12,
              0x20, 0x04, 0x17, 0x23, 0x26, 0x15, 0x16, 0x12, 0x08, 0x08, 0x17, 0x11, 0x05, 0x01, 0x21,
              0x19, 0x24, 0x07, 0x26, 0x29, 0x02, 0x28, 0x01, 0x23, 0x30, 0x07, 0x10, 0x30, 0x05, 0x03,
              0x00, 0x26, 0x03, 0x30, 0x24, 0x25, 0x12, 0x08, 0x01, 0x27, 0x26, 0x06, 0x29, 0x16, 0x17,
              0x12, 0x27, 0x26, 0x12, 0x22, 0x23, 0x00, 0x13, 0x11, 0x25, 0x26, 0x28, 0x19, 0x2,
              0x13, 0x10, 0x08, 0x20, 0x16, 0x28, 0x05, 0x30, 0x17, 0x02, 0x00]

my_midi.send_sysex_start()          # sends 0xF0 to start a system exclusive sequence
my_midi.send_sysex(midi_sysex)      # loops through the sysex commands list
my_midi.send_sysex_stop()           # sends 0xF7 to stop a system exclusive sequence
